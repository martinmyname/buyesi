(function () {
	const causeAPI = window.API.cause;
	const blogAPI = window.API.blog;
	const teamAPI = window.API.team;
	const galleryAPI = window.API.gallery;
	const eventAPI = window.API.event;
	const volunteerAPI = window.API.volunteer;
	const donationAPI = window.API.donation;
	const ENDPOINTS = window.API.ENDPOINTS;
	const fetchFromApi = window.API.fetchFromApi;
	const API_BASE_URL = window.API.BASE_URL;
	document.addEventListener('DOMContentLoaded', async function () {
		try {
			await loadLatestCauses(),
				await loadLatestBlogs(),
				await loadTeamMembers(),
				await loadGalleryImages(),
				await loadLatestEvents(),
				setupVolunteerForm(),
				setupDonationForm();
		} catch (e) {
			console.error('Error loading home page data:', e);
		}
	});
	function initializeCarousel(e) {
		console.log(`Initializing carousel for ${e}`),
			$(e).owlCarousel({
				autoplay: !0,
				center: !0,
				loop: !0,
				items: 1,
				margin: 30,
				stagePadding: 0,
				nav: !0,
				navText: [
					'<span class="ion-ios-arrow-back">',
					'<span class="ion-ios-arrow-forward">',
				],
				responsive: {
					0: { items: 1, stagePadding: 0 },
					600: { items: 2, stagePadding: 50 },
					1e3: { items: 3, stagePadding: 100 },
				},
			});
	}
	function createCarouselContainer(e, t) {
		const a = document.getElementById(e);
		if (!a) return console.error(`Section with ID ${e} not found`), null;
		const n = a.querySelector(`.carousel-${e.split('-')[0]}`);
		return n
			? (console.log(`Found existing carousel for ${e}:`, n),
			  (n.innerHTML = ''),
			  n)
			: (console.error(`Carousel container not found in section ${e}`),
			  console.log(`Creating new carousel container for ${e}`),
			  (t = document.createElement('div')),
			  (t.className = 'container'),
			  (t.innerHTML = `\n\t\t\t<div class="row justify-content-center mb-5 pb-3">\n\t\t\t\t<div class="col-md-7 heading-section text-center">\n\t\t\t\t\t<h2 class="mb-4">${title}</h2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="row">\n\t\t\t\t<div class="col-md-12">\n\t\t\t\t\t<div class="carousel-${
					e.split('-')[0]
			  } owl-carousel"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`),
			  (a.innerHTML = ''),
			  a.appendChild(t),
			  a.querySelector(`.carousel-${e.split('-')[0]}`));
	}
	function getDataFromResponse(e) {
		return Array.isArray(e) ? e : e?.data || [];
	}
	async function loadLatestCauses() {
		try {
			console.log('Loading causes...');
			const e = await fetchFromApi(ENDPOINTS.CAUSES);
			console.log('Causes response:', e);
			const t = getDataFromResponse(e);
			console.log('Number of causes loaded:', t.length);
			const a = document.querySelector('#causes-section .carousel-cause');
			if ((console.log('Direct selector for causes container:', a), !a))
				return void console.error('Could not find causes carousel container');
			if (((a.innerHTML = ''), t.length > 0)) {
				t.forEach((e, n) => {
					console.log(`Adding cause ${n + 1}/${t.length} to DOM:`, e.title);
					const o = document.createElement('div');
					(o.className = 'item'),
						(o.innerHTML = `\n\t\t\t\t\t<div class="cause-entry">\n\t\t\t\t\t\t<a href="cause-single.html?id=${
							e._id
						}" class="img" style="background-image: url(${getImageUrl(
							e.image,
							'causes'
						)});"></a>\n\t\t\t\t\t\t<div class="text p-3 p-md-4">\n\t\t\t\t\t\t\t<h3><a href="cause-single.html?id=${
							e._id
						}">${e.title}</a></h3>\n\t\t\t\t\t\t\t<p>${e.description.substring(
							0,
							100
						)}${
							e.description.length > 100 ? '...' : ''
						}</p>\n\t\t\t\t\t\t\t<span class="donation-time mb-3 d-block">Last donation ${formatTimeAgo(
							e.updatedAt
						)}</span>\n\t\t\t\t\t\t\t<div class="progress custom-progress-success">\n\t\t\t\t\t\t\t\t<div class="progress-bar bg-primary" role="progressbar" style="width: ${calculateProgress(
							e
						)}%" \n\t\t\t\t\t\t\t\t\t aria-valuenow="${calculateProgress(
							e
						)}" aria-valuemin="0" aria-valuemax="100"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span class="fund-raised d-block">$${e.raisedAmount.toLocaleString()} raised of $${e.targetAmount.toLocaleString()}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`),
						a.appendChild(o),
						console.log(`Cause ${n + 1} appended to container`);
				}),
					console.log('All causes added to container, initializing carousel'),
					initializeCarousel('.carousel-cause'),
					console.log('Carousel initialized for causes');
			} else
				console.warn('No causes data available'),
					showErrorMessage(
						'causes-section',
						'No causes available at this time.'
					);
		} catch (e) {
			console.error('Failed to load causes:', e),
				showErrorMessage(
					'causes-section',
					'Unable to load causes at this time.'
				);
		}
	}
	async function loadLatestBlogs() {
		try {
			console.log('Loading blogs...');
			const e = await fetchFromApi(ENDPOINTS.BLOGS);
			console.log('Blogs response:', e);
			const t = getDataFromResponse(e);
			console.log('Number of blogs loaded:', t.length);
			const a = document.querySelector('#blog-section .carousel-blog');
			if ((console.log('Direct selector for blog container:', a), !a))
				return void console.error('Could not find blog carousel container');
			if (((a.innerHTML = ''), t.length > 0)) {
				t.forEach((e, n) => {
					console.log(`Adding blog ${n + 1}/${t.length} to DOM:`, e.title);
					const o = document.createElement('div');
					(o.className = 'item'),
						(o.innerHTML = `\n\t\t\t\t\t<div class="blog-entry align-self-stretch">\n\t\t\t\t\t\t<a href="blog-single.html?id=${
							e._id
						}" class="block-20" style="background-image: url('${getImageUrl(
							e.image,
							'blog'
						)}');"></a>\n\t\t\t\t\t\t<div class="text p-4 d-block">\n\t\t\t\t\t\t\t<div class="meta mb-3">\n\t\t\t\t\t\t\t\t<div><a href="#">${new Date(
							e.createdAt
						).toLocaleDateString()}</a></div>\n\t\t\t\t\t\t\t\t<div><a href="#">${
							e.author || 'Admin'
						}</a></div>\n\t\t\t\t\t\t\t\t<div><a href="#" class="meta-chat"><span class="icon-chat"></span> ${
							e.comments?.length || 0
						}</a></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<h3 class="heading mt-3"><a href="blog-single.html?id=${
							e._id
						}">${e.title}</a></h3>\n\t\t\t\t\t\t\t<p>${
							e.content
								? e.content.substring(0, 150) +
								  (e.content.length > 150 ? '...' : '')
								: ''
						}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`),
						a.appendChild(o),
						console.log(`Blog ${n + 1} appended to container`);
				}),
					console.log('All blogs added to container, initializing carousel'),
					initializeCarousel('.carousel-blog'),
					console.log('Carousel initialized for blogs');
			} else
				console.warn('No blogs data available'),
					showErrorMessage(
						'blog-section',
						'No blog posts available at this time.'
					);
		} catch (e) {
			console.error('Failed to load blogs:', e),
				showErrorMessage(
					'blog-section',
					'Unable to load blog posts at this time.'
				);
		}
	}
	async function loadTeamMembers() {
		try {
			console.log('Loading team members...');
			const e = await fetchFromApi(ENDPOINTS.TEAM);
			console.log('Team response:', e);
			const t = getDataFromResponse(e);
			console.log('Number of team members loaded:', t.length);
			const a = document.querySelector('#team-section .carousel-team');
			if ((console.log('Direct selector for team container:', a), !a))
				return void console.error('Could not find team carousel container');
			if (((a.innerHTML = ''), t.length > 0)) {
				t.forEach((e, n) => {
					console.log(
						`Adding team member ${n + 1}/${t.length} to DOM:`,
						e.name
					);
					const o = document.createElement('div');
					(o.className = 'item'),
						(o.innerHTML = `\n\t\t\t\t\t<div class="staff">\n\t\t\t\t\t\t<div class="img-wrap d-flex align-items-stretch">\n\t\t\t\t\t\t\t<div class="img align-self-stretch" style="background-image: url(${getImageUrl(
							e.image,
							'team'
						)});"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="text pt-3 text-center">\n\t\t\t\t\t\t\t<h3>${
							e.name
						}</h3>\n\t\t\t\t\t\t\t<span class="position mb-2">${
							e.position
						}</span>\n\t\t\t\t\t\t\t<div class="faded">\n\t\t\t\t\t\t\t\t<p>${
							e.bio || ''
						}</p>\n\t\t\t\t\t\t\t\t<ul class="ftco-social text-center">\n\t\t\t\t\t\t\t\t\t${
							e.socialLinks
								? `\n\t\t\t\t\t\t\t\t\t${
										e.socialLinks.facebook
											? `<li class="ftco-animate"><a href="${e.socialLinks.facebook}"><span class="icon-facebook"></span></a></li>`
											: ''
								  }\n\t\t\t\t\t\t\t\t\t${
										e.socialLinks.twitter
											? `<li class="ftco-animate"><a href="${e.socialLinks.twitter}"><span class="icon-twitter"></span></a></li>`
											: ''
								  }\n\t\t\t\t\t\t\t\t\t${
										e.socialLinks.instagram
											? `<li class="ftco-animate"><a href="${e.socialLinks.instagram}"><span class="icon-instagram"></span></a></li>`
											: ''
								  }\n\t\t\t\t\t\t\t\t\t${
										e.socialLinks.linkedin
											? `<li class="ftco-animate"><a href="${e.socialLinks.linkedin}"><span class="icon-linkedin"></span></a></li>`
											: ''
								  }\n\t\t\t\t\t\t\t\t`
								: ''
						}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`),
						a.appendChild(o),
						console.log(`Team member ${n + 1} appended to container`);
				}),
					console.log(
						'All team members added to container, initializing carousel'
					),
					initializeCarousel('.carousel-team'),
					console.log('Carousel initialized for team');
			} else
				console.warn('No team members data available'),
					showErrorMessage(
						'team-section',
						'No team members available at this time.'
					);
		} catch (e) {
			console.error('Failed to load team members:', e),
				showErrorMessage(
					'team-section',
					'Unable to load team members at this time.'
				);
		}
	}
	async function loadGalleryImages() {
		try {
			console.log('Loading gallery images...');
			const e = await fetchFromApi(ENDPOINTS.GALLERY);
			console.log('Gallery response:', e);
			const t = getDataFromResponse(e);
			console.log('Number of gallery images loaded:', t.length);
			const a = document.querySelector('#gallery-section .carousel-gallery');
			if ((console.log('Direct selector for gallery container:', a), !a))
				return void console.error('Could not find gallery carousel container');
			if (((a.innerHTML = ''), t.length > 0)) {
				t.forEach((e, n) => {
					console.log(`Adding gallery image ${n + 1}/${t.length} to DOM`);
					const o = document.createElement('div');
					(o.className = 'item'),
						(o.innerHTML = `\n\t\t\t\t\t<a href="${getImageUrl(
							e.url,
							'gallery'
						)}" class="gallery image-popup img d-flex align-items-center" style="background-image: url(${getImageUrl(
							e.url,
							'gallery'
						)});">\n\t\t\t\t\t\t<div class="icon mb-4 d-flex align-items-center justify-content-center">\n\t\t\t\t\t\t\t<span class="icon-instagram"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t`),
						a.appendChild(o),
						console.log(`Gallery image ${n + 1} appended to container`);
				}),
					console.log(
						'All gallery images added to container, initializing carousel'
					),
					initializeCarousel('.carousel-gallery'),
					console.log('Carousel initialized for gallery'),
					$('.image-popup').magnificPopup({
						type: 'image',
						closeOnContentClick: !0,
						closeBtnInside: !1,
						fixedContentPos: !0,
						mainClass: 'mfp-no-margins mfp-with-zoom',
						image: { verticalFit: !0 },
						zoom: { enabled: !0, duration: 300 },
					});
			} else
				console.warn('No gallery images data available'),
					showErrorMessage(
						'gallery-section',
						'No gallery images available at this time.'
					);
		} catch (e) {
			console.error('Failed to load gallery images:', e),
				showErrorMessage(
					'gallery-section',
					'Unable to load gallery images at this time.'
				);
		}
	}
	async function loadLatestEvents() {
		try {
			console.log('Loading events...');
			const e = await fetchFromApi(ENDPOINTS.EVENTS);
			console.log('Events response:', e);
			const t = getDataFromResponse(e);
			console.log('Number of events loaded:', t.length);
			const a = document.querySelector('#events-section .carousel-events');
			if ((console.log('Direct selector for events container:', a), !a))
				return void console.error('Could not find events carousel container');
			if (((a.innerHTML = ''), t.length > 0)) {
				t.forEach((e, n) => {
					console.log(`Adding event ${n + 1}/${t.length} to DOM:`, e.title);
					const o = document.createElement('div');
					(o.className = 'item'),
						(o.innerHTML = `\n\t\t\t\t\t<div class="event-entry">\n\t\t\t\t\t\t<a href="event-single.html?id=${
							e._id
						}" class="img" style="background-image: url(${getImageUrl(
							e.image,
							'events'
						)});"></a>\n\t\t\t\t\t\t<div class="text p-4 p-md-5">\n\t\t\t\t\t\t\t<div class="meta">\n\t\t\t\t\t\t\t\t<div><a href="#">${new Date(
							e.date
						).toLocaleDateString()}</a></div>\n\t\t\t\t\t\t\t\t<div><a href="#">${
							e.time || 'TBA'
						}</a></div>\n\t\t\t\t\t\t\t\t<div><a href="#">${
							e.location || 'TBA'
						}</a></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<h3 class="mb-3"><a href="event-single.html?id=${
							e._id
						}">${e.title}</a></h3>\n\t\t\t\t\t\t\t<p>${
							e.description
								? e.description.substring(0, 100) +
								  (e.description.length > 100 ? '...' : '')
								: ''
						}</p>\n\t\t\t\t\t\t\t<p><a href="event-single.html?id=${
							e._id
						}" class="btn btn-primary">Read More</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`),
						a.appendChild(o),
						console.log(`Event ${n + 1} appended to container`);
				}),
					console.log('All events added to container, initializing carousel'),
					initializeCarousel('.carousel-events'),
					console.log('Carousel initialized for events');
			} else
				console.warn('No events data available'),
					showErrorMessage(
						'events-section',
						'No events available at this time.'
					);
		} catch (e) {
			console.error('Failed to load events:', e),
				showErrorMessage(
					'events-section',
					'Unable to load events at this time.'
				);
		}
	}
	function setupVolunteerForm() {
		const e = document.getElementById('volunteer-form');
		e &&
			e.addEventListener('submit', async (t) => {
				t.preventDefault();
				const a = e.querySelector('button[type="submit"]'),
					n = a.innerHTML;
				(a.disabled = !0),
					(a.innerHTML =
						'<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Submitting...');
				try {
					const t = new FormData(e),
						n = {
							name: t.get('name'),
							email: t.get('email'),
							phone: t.get('phone'),
							message: t.get('message'),
						};
					await volunteerAPI.register(n),
						showAlert(
							'Thank you for your interest in volunteering! We will contact you soon.',
							'success',
							e
						),
						e.reset();
				} catch (t) {
					console.error('Error submitting volunteer form:', t),
						showAlert(
							t.message || 'Failed to submit volunteer form. Please try again.',
							'danger',
							e
						);
				} finally {
					(a.disabled = !1), (a.innerHTML = n);
				}
			});
	}
	function setupDonationForm() {
		const e = document.getElementById('donation-form');
		e &&
			e.addEventListener('submit', async (t) => {
				t.preventDefault();
				const a = e.querySelector('button[type="submit"]'),
					n = a.innerHTML;
				(a.disabled = !0),
					(a.innerHTML =
						'<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...');
				try {
					const t = new FormData(e),
						n = {
							amount: parseFloat(t.get('amount')),
							name: t.get('name'),
							email: t.get('email'),
							message: t.get('message'),
						};
					await donationAPI.create(n),
						showAlert(
							'Thank you for your donation! We appreciate your support.',
							'success',
							e
						),
						e.reset();
				} catch (t) {
					console.error('Error submitting donation form:', t),
						showAlert(
							t.message || 'Failed to process donation. Please try again.',
							'danger',
							e
						);
				} finally {
					(a.disabled = !1), (a.innerHTML = n);
				}
			});
	}
	function showAlert(e, t, a) {
		const n = document.createElement('div');
		(n.className = `alert alert-${t} alert-dismissible fade show`),
			(n.role = 'alert'),
			(n.innerHTML = `\n\t\t${e}\n\t\t<button type="button" class="close" data-dismiss="alert" aria-label="Close">\n\t\t\t<span aria-hidden="true">&times;</span>\n\t\t</button>\n\t`),
			a
				? a.insertAdjacentElement('beforebegin', n)
				: document.body.insertAdjacentElement('afterbegin', n),
			setTimeout(() => {
				n.remove();
			}, 5e3);
	}
	function formatTimeAgo(e) {
		const t = new Date(e),
			a = new Date(),
			n = Math.floor((a - t) / 1e3),
			o = Math.floor(n / 60),
			i = Math.floor(o / 60),
			s = Math.floor(i / 24);
		return s > 0
			? `${s} day${1 === s ? '' : 's'} ago`
			: i > 0
			? `${i} hour${1 === i ? '' : 's'} ago`
			: o > 0
			? `${o} minute${1 === o ? '' : 's'} ago`
			: 'Just now';
	}
	function showErrorMessage(e, t) {
		const a = document.getElementById(e);
		if (a) {
			const e = document.createElement('div');
			(e.className = 'alert alert-warning text-center'),
				(e.textContent = t),
				a.querySelector('.row').appendChild(e);
		}
	}
	function calculateProgress(e) {
		const t = e.raisedAmount || 0,
			a = e.targetAmount || 1;
		return Math.min(100, Math.round((t / a) * 100));
	}
	function getImageUrl(e, t) {
		const url = e
			? e.startsWith('http')
				? e
				: e.includes('/uploads/')
				? `${API_BASE_URL}${e}`
				: `${API_BASE_URL}/uploads/${t}/${e}`
			: `images/${t}-default.jpg`;
		console.log(`Image URL for ${t}: ${url}`);
		return url;
	}
})();
