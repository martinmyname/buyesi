const API_BASE_URL="http://localhost:5000/api";const handleResponse=async response=>{console.log(`API Response from ${response.url}:`,{status:response.status,statusText:response.statusText});const isVolunteerRegistration=response.url.endsWith("/volunteers")&&response.request?.method==="POST";if(!response.ok){try{const error=await response.json();console.error("API Error:",error);if(isVolunteerRegistration&&error.message&&(error.message.includes("email")||error.message.includes("mail")||error.message.includes("login")||error.message.includes("smtp"))){throw new Error("EMAIL_ERROR:"+(error.message||"Failed to send email notification"))}throw new Error(error.message||"Something went wrong")}catch(e){console.error("Error parsing error response:",e);throw new Error(`HTTP error ${response.status}: ${response.statusText}`)}}try{const data=await response.json();console.log("API Response Data Structure:",{hasData:data.hasOwnProperty("data"),dataType:data.data?typeof data.data:"undefined",isArray:data.data?Array.isArray(data.data):false,length:data.data&&Array.isArray(data.data)?data.data.length:"N/A",fullResponse:data});return data}catch(e){console.error("Error parsing JSON response:",e);throw new Error("Failed to parse response data")}};const authAPI={login:async(email,password)=>{const response=await fetch(`${API_BASE_URL}/auth/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:email,password:password})});return handleResponse(response)},register:async userData=>{const response=await fetch(`${API_BASE_URL}/auth/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(userData)});return handleResponse(response)},logout:()=>{localStorage.removeItem("token");localStorage.removeItem("user")},getCurrentUser:()=>{return JSON.parse(localStorage.getItem("user"))},isAuthenticated:()=>{return!!localStorage.getItem("token")}};const donationAPI={create:async donationData=>{const response=await fetch(`${API_BASE_URL}/donations`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(donationData)});return handleResponse(response)},getAll:async()=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/donations`,{method:"GET",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)}};const contactAPI={sendMessage:async messageData=>{const response=await fetch(`${API_BASE_URL}/contact`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(messageData)});return handleResponse(response)}};const volunteerAPI={register:async volunteerData=>{const response=await fetch(`${API_BASE_URL}/volunteers`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(volunteerData)});return handleResponse(response)},getAll:async()=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/volunteers`,{method:"GET",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)},getById:async id=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/volunteers/${id}`,{method:"GET",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)},update:async(id,volunteerData)=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/volunteers/${id}`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:token?`Bearer ${token}`:""},body:JSON.stringify(volunteerData)});return handleResponse(response)},delete:async id=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/volunteers/${id}`,{method:"DELETE",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)}};const eventAPI={getAll:async()=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/events`,{method:"GET",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)},getById:async id=>{const response=await fetch(`${API_BASE_URL}/events/${id}`);return handleResponse(response)},create:async formData=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/events`,{method:"POST",headers:{Authorization:token?`Bearer ${token}`:""},body:formData});return handleResponse(response)},update:async(id,formData)=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/events/${id}`,{method:"PUT",headers:{Authorization:token?`Bearer ${token}`:""},body:formData});return handleResponse(response)},delete:async id=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/events/${id}`,{method:"DELETE",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)}};const blogAPI={getAll:async()=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/blogs`,{method:"GET",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)},getById:async id=>{const response=await fetch(`${API_BASE_URL}/blogs/${id}`);return handleResponse(response)},create:async formData=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/blogs`,{method:"POST",headers:{Authorization:token?`Bearer ${token}`:""},body:formData});return handleResponse(response)},update:async(id,formData)=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/blogs/${id}`,{method:"PUT",headers:{Authorization:token?`Bearer ${token}`:""},body:formData});return handleResponse(response)},delete:async id=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/blogs/${id}`,{method:"DELETE",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)}};const galleryAPI={getAll:async()=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/galleries`,{method:"GET",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)},create:async formData=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/galleries`,{method:"POST",headers:{Authorization:token?`Bearer ${token}`:""},body:formData});return handleResponse(response)},update:async(id,formData)=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/galleries/${id}`,{method:"PUT",headers:{Authorization:token?`Bearer ${token}`:""},body:formData});return handleResponse(response)},delete:async id=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/galleries/${id}`,{method:"DELETE",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)}};const teamAPI={getAll:async()=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/teams`,{method:"GET",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)},getById:async id=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/teams/${id}`,{method:"GET",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)},create:async formData=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/teams`,{method:"POST",headers:{Authorization:token?`Bearer ${token}`:""},body:formData});return handleResponse(response)},update:async(id,formData)=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/teams/${id}`,{method:"PUT",headers:{Authorization:token?`Bearer ${token}`:""},body:formData});return handleResponse(response)},delete:async id=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/teams/${id}`,{method:"DELETE",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)}};const causeAPI={getAll:async()=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/causes`,{method:"GET",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)},getById:async id=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/causes/${id}`,{method:"GET",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)},create:async formData=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/causes`,{method:"POST",headers:{Authorization:token?`Bearer ${token}`:""},body:formData});return handleResponse(response)},update:async(id,formData)=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/causes/${id}`,{method:"PUT",headers:{Authorization:token?`Bearer ${token}`:""},body:formData});return handleResponse(response)},delete:async id=>{const token=localStorage.getItem("token");const response=await fetch(`${API_BASE_URL}/causes/${id}`,{method:"DELETE",headers:{Authorization:token?`Bearer ${token}`:""}});return handleResponse(response)}};window.API={auth:authAPI,donationAPI:donationAPI,contactAPI:contactAPI,volunteerAPI:volunteerAPI,eventAPI:eventAPI,blogAPI:blogAPI,galleryAPI:galleryAPI,teamAPI:teamAPI,causeAPI:causeAPI};